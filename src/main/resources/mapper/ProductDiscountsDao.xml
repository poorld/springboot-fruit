<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teenyda.dao.ProductDiscountsDao">

    <resultMap type="com.teenyda.entity.ProductDiscounts" id="ProductDiscountsMap">
        <result property="pdId" column="pd_id" jdbcType="INTEGER"/>
        <result property="productId" column="product_id" jdbcType="INTEGER"/>
        <result property="discountsId" column="discounts_id" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ProductDiscountsMap">
        select pd_id
               product_id,
               discounts_id
        from fruit.product_discounts
        where pd_id = #{pdId}
    </select>

    <!--    mysql 1093 - You can't specify target table 'xx表' for ...
    update/delete语句中包含的子查询的表和update的表为同一张表时，报错：1093-You can’t specify target table for update in FROM clause
    mysql不允许update/delete目标表和子查询里面的表为同一张表
    原来的写法：delete
		from fruit.product_discounts
		where pd_id IN
        (
        SELECT
            pd.pd_id
        FROM
            fruit.discounts d
            LEFT JOIN fruit.discounts_category dc ON d.discounts_category_id = dc.discounts_category_id
            LEFT JOIN product_discounts pd ON pd.discounts_id = d.discounts_id
            AND d.members = 0
        WHERE
            pd.product_id = 11
        )
    -->
    <!--  根据产品id删除全部用户优惠  -->
    <delete id="deleteUserPDbyProductId">
        delete
        from fruit.product_discounts
        where pd_id IN
              (
                  SELECT * FROM
                      (
                          SELECT
                              pd.pd_id
                          FROM
                              fruit.discounts d
                                  LEFT JOIN fruit.discounts_category dc ON d.discounts_category_id = dc.discounts_category_id
                                  LEFT JOIN product_discounts pd ON pd.discounts_id = d.discounts_id
                                  AND d.members = 0
                          WHERE
                              pd.product_id = #{productId}
                      )
                          AS temp
              )
    </delete>

    <!--  根据产品id删除全部会员优惠  -->
    <delete id="deleteMembersPDbyProductId">
        delete
        from fruit.product_discounts
        where pd_id IN
              (
                  SELECT * FROM
                      (
                          SELECT
                              pd.pd_id
                          FROM
                              fruit.discounts d
                                  LEFT JOIN fruit.discounts_category dc ON d.discounts_category_id = dc.discounts_category_id
                                  LEFT JOIN product_discounts pd ON pd.discounts_id = d.discounts_id
                                  AND d.members = 1
                          WHERE
                              pd.product_id = #{productId}
                      )
                          AS temp
              )
    </delete>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ProductDiscountsMap">
        select product_id,
               discounts_id
        from fruit.product_discounts
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="ProductDiscountsMap">
        select
        product_id, discounts_id
        from fruit.product_discounts
        <where>
            <if test="productId != null">
                and product_id = #{productId}
            </if>
            <if test="discountsId != null">
                and discounts_id = #{discountsId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="pdId" useGeneratedKeys="true">
        insert into fruit.product_discounts(product_id, discounts_id)
        values (#{productId}, #{discountsId})
    </insert>

    <insert id="insertBatch" keyProperty="pdId" useGeneratedKeys="true">
        insert into fruit.product_discounts(product_id, discounts_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.productId}, #{entity.discountsId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="pdId" useGeneratedKeys="true">
        insert into fruit.product_discounts(product_id, discounts_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.productId}, #{entity.discountsId})
        </foreach>
        on duplicate key update
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update fruit.product_discounts
        <set>
            discounts_id = #{discountsId},
            product_id = #{productId}
        </set>
        where pd_id = #{pdId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from fruit.product_discounts
        where pd_id = #{pdId}
    </delete>

</mapper>