<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teenyda.dao.OrderPaymentDao">

    <resultMap type="com.teenyda.entity.OrderPayment" id="OrderPaymentMap">
        <result property="orderPaymentId" column="order_payment_id" jdbcType="INTEGER"/>
        <result property="orderNum" column="order_num" jdbcType="VARCHAR"/>
        <result property="totalAmount" column="total_amount" jdbcType="NUMERIC"/>
        <result property="payAmount" column="pay_amount" jdbcType="NUMERIC"/>
        <result property="discountAmount" column="discount_amount" jdbcType="NUMERIC"/>
        <result property="creationTime" column="creation_time" jdbcType="TIMESTAMP"/>
        <result property="endTime" column="end_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="OrderPaymentMap">
        select order_payment_id,
               order_num,
               total_amount,
               pay_amount,
               discount_amount,
               creation_time,
               end_time
        from fruit.order_payment
        where order_payment_id = #{orderPaymentId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="OrderPaymentMap">
        select order_payment_id,
               order_num,
               total_amount,
               pay_amount,
               discount_amount,
               creation_time,
               end_time
        from fruit.order_payment
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="OrderPaymentMap">
        select
        order_payment_id, order_num, total_amount, pay_amount, discount_amount, creation_time, end_time
        from fruit.order_payment
        <where>
            <if test="orderPaymentId != null">
                and order_payment_id = #{orderPaymentId}
            </if>
            <if test="orderNum != null and orderNum != ''">
                and order_num = #{orderNum}
            </if>
            <if test="totalAmount != null">
                and total_amount = #{totalAmount}
            </if>
            <if test="payAmount != null">
                and pay_amount = #{payAmount}
            </if>
            <if test="discountAmount != null">
                and discount_amount = #{discountAmount}
            </if>
            <if test="creationTime != null">
                and creation_time = #{creationTime}
            </if>
            <if test="endTime != null">
                and end_time = #{endTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="orderPaymentId" useGeneratedKeys="true">
        insert into fruit.order_payment(order_num, total_amount, pay_amount, discount_amount, creation_time, end_time)
        values (#{orderNum}, #{totalAmount}, #{payAmount}, #{discountAmount}, #{creationTime}, #{endTime})
    </insert>

    <insert id="insertBatch" keyProperty="orderPaymentId" useGeneratedKeys="true">
        insert into fruit.order_payment(order_num, total_amount, pay_amount, discount_amount, creation_time, end_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.orderNum}, #{entity.totalAmount}, #{entity.payAmount}, #{entity.discountAmount},
            #{entity.creationTime}, #{entity.endTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="orderPaymentId" useGeneratedKeys="true">
        insert into fruit.order_payment(order_num, total_amount, pay_amount, discount_amount, creation_time, end_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.orderNum}, #{entity.totalAmount}, #{entity.payAmount}, #{entity.discountAmount},
            #{entity.creationTime}, #{entity.endTime})
        </foreach>
        on duplicate key update
        order_num = values(order_num) , total_amount = values(total_amount) , pay_amount = values(pay_amount) ,
        discount_amount = values(discount_amount) , creation_time = values(creation_time) , end_time = values(end_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update fruit.order_payment
        <set>
            <if test="orderNum != null and orderNum != ''">
                order_num = #{orderNum},
            </if>
            <if test="totalAmount != null">
                total_amount = #{totalAmount},
            </if>
            <if test="payAmount != null">
                pay_amount = #{payAmount},
            </if>
            <if test="discountAmount != null">
                discount_amount = #{discountAmount},
            </if>
            <if test="creationTime != null">
                creation_time = #{creationTime},
            </if>
            <if test="endTime != null">
                end_time = #{endTime},
            </if>
        </set>
        where order_payment_id = #{orderPaymentId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from fruit.order_payment
        where order_payment_id = #{orderPaymentId}
    </delete>

</mapper>