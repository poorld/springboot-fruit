<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teenyda.dao.WalletDao">

    <resultMap type="com.teenyda.entity.Wallet" id="WalletMap">
        <result property="walletId" column="wallet_id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="balance" column="balance" jdbcType="NUMERIC"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryByUserId" resultMap="WalletMap">
        select
          wallet_id, user_id, balance, password
        from fruit.wallet
        where wallet_id = #{walletId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="WalletMap">
        select
          wallet_id, user_id, balance, password
        from fruit.wallet
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="WalletMap">
        select
        wallet_id, user_id, balance, password
        from fruit.wallet
        <where>
            <if test="walletId != null">
                and wallet_id = #{walletId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="balance != null">
                and balance = #{balance}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="walletId" useGeneratedKeys="true">
        insert into fruit.wallet(user_id, balance, password)
        values (#{userId}, #{balance}, #{password})
    </insert>

    <insert id="insertBatch" keyProperty="walletId" useGeneratedKeys="true">
        insert into fruit.wallet(user_id, balance, password)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.balance}, #{entity.password})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="walletId" useGeneratedKeys="true">
        insert into fruit.wallet(user_id, balance, password)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.balance}, #{entity.password})
        </foreach>
        on duplicate key update
        user_id = values(user_id) , balance = values(balance) , password = values(password)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update fruit.wallet
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="balance != null">
                balance = #{balance},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
        </set>
        where wallet_id = #{walletId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from fruit.wallet where wallet_id = #{walletId}
    </delete>

</mapper>