<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teenyda.mapper.base.BrandBaseMapper">


    <insert id="insertBrand"  useGeneratedKeys="true" keyProperty="brandId">
        INSERT INTO `brand`
        (
        <trim suffixOverrides=",">
                    <if test="brandId!=null">
                        `brand_id`,
                    </if>
                    <if test="brandCode!=null">
                        `brand_code`,
                    </if>
                    <if test="brandName!=null">
                        `brand_name`,
                    </if>
                    <if test="brandState!=null">
                        `brand_state`,
                    </if>
                    <if test="userId!=null">
                        `user_id`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="brandId!=null">
                    #{brandId},
                </if>
                <if test="brandCode!=null">
                    #{brandCode},
                </if>
                <if test="brandName!=null">
                    #{brandName},
                </if>
                <if test="brandState!=null">
                    #{brandState},
                </if>
                <if test="userId!=null">
                    #{userId},
                </if>
        </trim>
        )
    </insert>




    <update id="updateBrand">
        UPDATE `brand`
        SET
        <trim suffixOverrides=",">
            <if test="brandCode != null and brandCode!=''">
                `brand_code` = #{brandCode},
            </if>
            <if test="brandName != null and brandName!=''">
                `brand_name` = #{brandName},
            </if>
            <if test="brandState != null">
                `brand_state` = #{brandState},
            </if>
            <if test="userId != null">
                `user_id` = #{userId},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `brand_id` = #{brandId} and
        </trim>
    </update>

    <update id="update">
        UPDATE `brand`
        SET
        <trim suffixOverrides=",">
        <if test="set.brandCode != null and set.brandCode!=''">
            `brand_code` = #{set.brandCode},
        </if>
        <if test="set.brandName != null and set.brandName!=''">
            `brand_name` = #{set.brandName},
        </if>
        <if test="set.brandState != null">
            `brand_state` = #{set.brandState},
        </if>
        <if test="set.userId != null">
            `user_id` = #{set.userId},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.brandIdList != null">
                    `brand_id` in
                    <foreach collection="where.brandIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.brandIdSt !=null">
                `brand_id` >= #{where.brandIdSt} and
            </if>
            <if test="where.brandIdEd!=null">
                `brand_id` &lt;= #{where.brandIdEd} and
            </if>
                <if test="where.brandCodeList != null">
                    `brand_code` in
                    <foreach collection="where.brandCodeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyBrandCode!=null and where.fuzzyBrandCode.size()>0">
                (
                <foreach collection="where.fuzzyBrandCode"  separator="or" item="item">
                    `Brand_code` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyBrandCode!=null and where.rightFuzzyBrandCode.size()>0">
                (
                <foreach collection="where.rightFuzzyBrandCode"  separator="or" item="item">
                    `Brand_code` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.brandNameList != null">
                    `brand_name` in
                    <foreach collection="where.brandNameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyBrandName!=null and where.fuzzyBrandName.size()>0">
                (
                <foreach collection="where.fuzzyBrandName"  separator="or" item="item">
                    `Brand_name` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyBrandName!=null and where.rightFuzzyBrandName.size()>0">
                (
                <foreach collection="where.rightFuzzyBrandName"  separator="or" item="item">
                    `Brand_name` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.brandStateList != null">
                    `brand_state` in
                    <foreach collection="where.brandStateList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.brandStateSt !=null">
                `brand_state` >= #{where.brandStateSt} and
            </if>
            <if test="where.brandStateEd!=null">
                `brand_state` &lt;= #{where.brandStateEd} and
            </if>
                <if test="where.userIdList != null">
                    `user_id` in
                    <foreach collection="where.userIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.userIdSt !=null">
                `user_id` >= #{where.userIdSt} and
            </if>
            <if test="where.userIdEd!=null">
                `user_id` &lt;= #{where.userIdEd} and
            </if>
        </trim>
    </update>


    <resultMap type="com.teenyda.dto.Brand" id="BrandMap">
        <result property="brandId" column="brand_id"/>
        <result property="brandCode" column="brand_code"/>
        <result property="brandName" column="brand_name"/>
        <result property="brandState" column="brand_state"/>
        <result property="userId" column="user_id"/>
    </resultMap>


    <select id="queryBrand" resultMap="BrandMap">
        select
        <include refid="baseResult"></include>
        from  `brand`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="brandId != null">
                `brand_id` = #{brandId} and
            </if>
            <if test="brandCode != null and brandCode!=''">
                `brand_code` = #{brandCode} and
            </if>
            <if test="brandName != null and brandName!=''">
                `brand_name` = #{brandName} and
            </if>
            <if test="brandState != null">
                `brand_state` = #{brandState} and
            </if>
            <if test="userId != null">
                `user_id` = #{userId} and
            </if>
            <if test = "(_parameter instanceof com.teenyda.dto.Brand$QueryBuilder) == true">
                <if test="brandIdList != null">
                    `brand_id` in
                    <foreach collection="brandIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="brandIdSt !=null">
                    `brand_id` >= #{brandIdSt} and
                </if>
                <if test="brandIdEd!=null">
                    `brand_id` &lt;= #{brandIdEd} and
                </if>
                <if test="brandCodeList != null">
                    `brand_code` in
                    <foreach collection="brandCodeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyBrandCode!=null and fuzzyBrandCode.size()>0">
                    (
                    <foreach collection="fuzzyBrandCode"  separator="or" item="item">
                        `Brand_code` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyBrandCode!=null and rightFuzzyBrandCode.size()>0">
                    (
                    <foreach collection="rightFuzzyBrandCode"  separator="or" item="item">
                        `Brand_code` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="brandNameList != null">
                    `brand_name` in
                    <foreach collection="brandNameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyBrandName!=null and fuzzyBrandName.size()>0">
                    (
                    <foreach collection="fuzzyBrandName"  separator="or" item="item">
                        `Brand_name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyBrandName!=null and rightFuzzyBrandName.size()>0">
                    (
                    <foreach collection="rightFuzzyBrandName"  separator="or" item="item">
                        `Brand_name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="brandStateList != null">
                    `brand_state` in
                    <foreach collection="brandStateList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="brandStateSt !=null">
                    `brand_state` >= #{brandStateSt} and
                </if>
                <if test="brandStateEd!=null">
                    `brand_state` &lt;= #{brandStateEd} and
                </if>
                <if test="userIdList != null">
                    `user_id` in
                    <foreach collection="userIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="userIdSt !=null">
                    `user_id` >= #{userIdSt} and
                </if>
                <if test="userIdEd!=null">
                    `user_id` &lt;= #{userIdEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryBrandLimit1" resultMap="BrandMap">
        select
        <include refid="baseResult"></include>
        from  `brand`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="brandId != null">
                `brand_id` = #{brandId} and
            </if>
            <if test="brandCode != null and brandCode!=''">
                `brand_code` = #{brandCode} and
            </if>
            <if test="brandName != null and brandName!=''">
                `brand_name` = #{brandName} and
            </if>
            <if test="brandState != null">
                `brand_state` = #{brandState} and
            </if>
            <if test="userId != null">
                `user_id` = #{userId} and
            </if>
            <if test = "(_parameter instanceof com.teenyda.dto.Brand$QueryBuilder) == true">
                    <if test="brandIdList != null">
                        `brand_id` in
                        <foreach collection="brandIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="brandIdSt !=null">
                    `brand_id` >= #{brandIdSt} and
                </if>
                <if test="brandIdEd!=null">
                    `brand_id` &lt;= #{brandIdEd} and
                </if>
                    <if test="brandCodeList != null">
                        `brand_code` in
                        <foreach collection="brandCodeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyBrandCode!=null and fuzzyBrandCode.size()>0">
                    (
                    <foreach collection="fuzzyBrandCode"  separator="or" item="item">
                        `Brand_code` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyBrandCode!=null and rightFuzzyBrandCode.size()>0">
                    (
                    <foreach collection="rightFuzzyBrandCode"  separator="or" item="item">
                        `Brand_code` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="brandNameList != null">
                        `brand_name` in
                        <foreach collection="brandNameList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyBrandName!=null and fuzzyBrandName.size()>0">
                    (
                    <foreach collection="fuzzyBrandName"  separator="or" item="item">
                        `Brand_name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyBrandName!=null and rightFuzzyBrandName.size()>0">
                    (
                    <foreach collection="rightFuzzyBrandName"  separator="or" item="item">
                        `Brand_name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="brandStateList != null">
                        `brand_state` in
                        <foreach collection="brandStateList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="brandStateSt !=null">
                    `brand_state` >= #{brandStateSt} and
                </if>
                <if test="brandStateEd!=null">
                    `brand_state` &lt;= #{brandStateEd} and
                </if>
                    <if test="userIdList != null">
                        `user_id` in
                        <foreach collection="userIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="userIdSt !=null">
                    `user_id` >= #{userIdSt} and
                </if>
                <if test="userIdEd!=null">
                    `user_id` &lt;= #{userIdEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `brand_id`,
        `brand_code`,
        `brand_name`,
        `brand_state`,
        `user_id`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof com.teenyda.dto.Brand$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.brandId==true">
                        `brand_id`,
                    </if>
                    <if test="fetchFields.fetchFields.brandCode==true">
                        `brand_code`,
                    </if>
                    <if test="fetchFields.fetchFields.brandName==true">
                        `brand_name`,
                    </if>
                    <if test="fetchFields.fetchFields.brandState==true">
                        `brand_state`,
                    </if>
                    <if test="fetchFields.fetchFields.userId==true">
                        `user_id`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.brandId==null">
                        `brand_id`,
                    </if>
                    <if test="fetchFields.excludeFields.brandCode==null">
                        `brand_code`,
                    </if>
                    <if test="fetchFields.excludeFields.brandName==null">
                        `brand_name`,
                    </if>
                    <if test="fetchFields.excludeFields.brandState==null">
                        `brand_state`,
                    </if>
                    <if test="fetchFields.excludeFields.userId==null">
                        `user_id`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof com.teenyda.dto.Brand$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>