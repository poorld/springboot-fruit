<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teenyda.mapper.base.WalletBaseMapper">


    <insert id="insertWallet"  useGeneratedKeys="true" keyProperty="walletId">
        INSERT INTO `wallet`
        (
        <trim suffixOverrides=",">
                    <if test="walletId!=null">
                        `wallet_id`,
                    </if>
                    <if test="userId!=null">
                        `user_id`,
                    </if>
                    <if test="balance!=null">
                        `balance`,
                    </if>
                    <if test="password!=null">
                        `password`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="walletId!=null">
                    #{walletId},
                </if>
                <if test="userId!=null">
                    #{userId},
                </if>
                <if test="balance!=null">
                    #{balance},
                </if>
                <if test="password!=null">
                    #{password},
                </if>
        </trim>
        )
    </insert>




    <update id="updateWallet">
        UPDATE `wallet`
        SET
        <trim suffixOverrides=",">
            <if test="userId != null">
                `user_id` = #{userId},
            </if>
            <if test="balance != null">
                `balance` = #{balance},
            </if>
            <if test="password != null and password!=''">
                `password` = #{password},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `wallet_id` = #{walletId} and
        </trim>
    </update>

    <update id="update">
        UPDATE `wallet`
        SET
        <trim suffixOverrides=",">
        <if test="set.userId != null">
            `user_id` = #{set.userId},
        </if>
        <if test="set.balance != null">
            `balance` = #{set.balance},
        </if>
        <if test="set.password != null and set.password!=''">
            `password` = #{set.password},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.walletIdList != null">
                    `wallet_id` in
                    <foreach collection="where.walletIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.walletIdSt !=null">
                `wallet_id` >= #{where.walletIdSt} and
            </if>
            <if test="where.walletIdEd!=null">
                `wallet_id` &lt;= #{where.walletIdEd} and
            </if>
                <if test="where.userIdList != null">
                    `user_id` in
                    <foreach collection="where.userIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.userIdSt !=null">
                `user_id` >= #{where.userIdSt} and
            </if>
            <if test="where.userIdEd!=null">
                `user_id` &lt;= #{where.userIdEd} and
            </if>
                <if test="where.balanceList != null">
                    `balance` in
                    <foreach collection="where.balanceList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.balanceSt !=null">
                `balance` >= #{where.balanceSt} and
            </if>
            <if test="where.balanceEd!=null">
                `balance` &lt;= #{where.balanceEd} and
            </if>
                <if test="where.passwordList != null">
                    `password` in
                    <foreach collection="where.passwordList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyPassword!=null and where.fuzzyPassword.size()>0">
                (
                <foreach collection="where.fuzzyPassword"  separator="or" item="item">
                    `Password` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyPassword!=null and where.rightFuzzyPassword.size()>0">
                (
                <foreach collection="where.rightFuzzyPassword"  separator="or" item="item">
                    `Password` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
        </trim>
    </update>


    <resultMap type="com.teenyda.dao.Wallet" id="WalletMap">
        <result property="walletId" column="wallet_id"/>
        <result property="userId" column="user_id"/>
        <result property="balance" column="balance"/>
        <result property="password" column="password"/>
    </resultMap>


    <select id="queryWallet" resultMap="WalletMap">
        select
        <include refid="baseResult"></include>
        from  `wallet`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="walletId != null">
                `wallet_id` = #{walletId} and
            </if>
            <if test="userId != null">
                `user_id` = #{userId} and
            </if>
            <if test="balance != null">
                `balance` = #{balance} and
            </if>
            <if test="password != null and password!=''">
                `password` = #{password} and
            </if>
            <if test = "(_parameter instanceof com.teenyda.dao.Wallet$QueryBuilder) == true">
                <if test="walletIdList != null">
                    `wallet_id` in
                    <foreach collection="walletIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="walletIdSt !=null">
                    `wallet_id` >= #{walletIdSt} and
                </if>
                <if test="walletIdEd!=null">
                    `wallet_id` &lt;= #{walletIdEd} and
                </if>
                <if test="userIdList != null">
                    `user_id` in
                    <foreach collection="userIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="userIdSt !=null">
                    `user_id` >= #{userIdSt} and
                </if>
                <if test="userIdEd!=null">
                    `user_id` &lt;= #{userIdEd} and
                </if>
                <if test="balanceList != null">
                    `balance` in
                    <foreach collection="balanceList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="balanceSt !=null">
                    `balance` >= #{balanceSt} and
                </if>
                <if test="balanceEd!=null">
                    `balance` &lt;= #{balanceEd} and
                </if>
                <if test="passwordList != null">
                    `password` in
                    <foreach collection="passwordList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyPassword!=null and fuzzyPassword.size()>0">
                    (
                    <foreach collection="fuzzyPassword"  separator="or" item="item">
                        `Password` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyPassword!=null and rightFuzzyPassword.size()>0">
                    (
                    <foreach collection="rightFuzzyPassword"  separator="or" item="item">
                        `Password` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryWalletLimit1" resultMap="WalletMap">
        select
        <include refid="baseResult"></include>
        from  `wallet`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="walletId != null">
                `wallet_id` = #{walletId} and
            </if>
            <if test="userId != null">
                `user_id` = #{userId} and
            </if>
            <if test="balance != null">
                `balance` = #{balance} and
            </if>
            <if test="password != null and password!=''">
                `password` = #{password} and
            </if>
            <if test = "(_parameter instanceof com.teenyda.dao.Wallet$QueryBuilder) == true">
                    <if test="walletIdList != null">
                        `wallet_id` in
                        <foreach collection="walletIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="walletIdSt !=null">
                    `wallet_id` >= #{walletIdSt} and
                </if>
                <if test="walletIdEd!=null">
                    `wallet_id` &lt;= #{walletIdEd} and
                </if>
                    <if test="userIdList != null">
                        `user_id` in
                        <foreach collection="userIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="userIdSt !=null">
                    `user_id` >= #{userIdSt} and
                </if>
                <if test="userIdEd!=null">
                    `user_id` &lt;= #{userIdEd} and
                </if>
                    <if test="balanceList != null">
                        `balance` in
                        <foreach collection="balanceList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="balanceSt !=null">
                    `balance` >= #{balanceSt} and
                </if>
                <if test="balanceEd!=null">
                    `balance` &lt;= #{balanceEd} and
                </if>
                    <if test="passwordList != null">
                        `password` in
                        <foreach collection="passwordList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyPassword!=null and fuzzyPassword.size()>0">
                    (
                    <foreach collection="fuzzyPassword"  separator="or" item="item">
                        `Password` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyPassword!=null and rightFuzzyPassword.size()>0">
                    (
                    <foreach collection="rightFuzzyPassword"  separator="or" item="item">
                        `Password` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `wallet_id`,
        `user_id`,
        `balance`,
        `password`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof com.teenyda.dao.Wallet$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.walletId==true">
                        `wallet_id`,
                    </if>
                    <if test="fetchFields.fetchFields.userId==true">
                        `user_id`,
                    </if>
                    <if test="fetchFields.fetchFields.balance==true">
                        `balance`,
                    </if>
                    <if test="fetchFields.fetchFields.password==true">
                        `password`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.walletId==null">
                        `wallet_id`,
                    </if>
                    <if test="fetchFields.excludeFields.userId==null">
                        `user_id`,
                    </if>
                    <if test="fetchFields.excludeFields.balance==null">
                        `balance`,
                    </if>
                    <if test="fetchFields.excludeFields.password==null">
                        `password`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof com.teenyda.dao.Wallet$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>