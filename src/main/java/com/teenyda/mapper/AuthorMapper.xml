<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.teenyda.mapper.AuthorMapper" >
  <resultMap id="BaseResultMap" type="com.teenyda.model.Author" >
    <id column="auth_id" property="authId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="media_id" property="mediaId" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="following_count" property="followingCount" jdbcType="INTEGER" />
    <result column="verified_content" property="verifiedContent" jdbcType="VARCHAR" />
    <result column="follow" property="follow" jdbcType="BIT" />
    <result column="user_verified" property="userVerified" jdbcType="BIT" />
    <result column="auth_type" property="authType" jdbcType="INTEGER" />
    <result column="auth_info" property="authInfo" jdbcType="VARCHAR" />
    <result column="video_live_auth" property="videoLiveAuth" jdbcType="INTEGER" />
    <result column="ban_status" property="banStatus" jdbcType="INTEGER" />
    <result column="followers_count" property="followersCount" jdbcType="INTEGER" />
    <result column="share_url" property="shareUrl" jdbcType="VARCHAR" />
    <result column="ugc_publish_media_id" property="ugcPublishMediaId" jdbcType="VARCHAR" />
    <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    auth_id, name, media_id, description, following_count, verified_content, follow, 
    user_verified, auth_type, auth_info, video_live_auth, ban_status, followers_count, 
    share_url, ugc_publish_media_id, avatar_url
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.teenyda.model.AuthorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from author
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from author
    where auth_id = #{authId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from author
    where auth_id = #{authId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.teenyda.model.AuthorExample" >
    delete from author
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.teenyda.model.Author" >
    insert into author (auth_id, name, media_id, 
      description, following_count, verified_content, 
      follow, user_verified, auth_type, 
      auth_info, video_live_auth, ban_status, 
      followers_count, share_url, ugc_publish_media_id, 
      avatar_url)
    values (#{authId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{mediaId,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{followingCount,jdbcType=INTEGER}, #{verifiedContent,jdbcType=VARCHAR}, 
      #{follow,jdbcType=BIT}, #{userVerified,jdbcType=BIT}, #{authType,jdbcType=INTEGER}, 
      #{authInfo,jdbcType=VARCHAR}, #{videoLiveAuth,jdbcType=INTEGER}, #{banStatus,jdbcType=INTEGER}, 
      #{followersCount,jdbcType=INTEGER}, #{shareUrl,jdbcType=VARCHAR}, #{ugcPublishMediaId,jdbcType=VARCHAR}, 
      #{avatarUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.teenyda.model.Author" >
    insert into author
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="authId != null" >
        auth_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="mediaId != null" >
        media_id,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="followingCount != null" >
        following_count,
      </if>
      <if test="verifiedContent != null" >
        verified_content,
      </if>
      <if test="follow != null" >
        follow,
      </if>
      <if test="userVerified != null" >
        user_verified,
      </if>
      <if test="authType != null" >
        auth_type,
      </if>
      <if test="authInfo != null" >
        auth_info,
      </if>
      <if test="videoLiveAuth != null" >
        video_live_auth,
      </if>
      <if test="banStatus != null" >
        ban_status,
      </if>
      <if test="followersCount != null" >
        followers_count,
      </if>
      <if test="shareUrl != null" >
        share_url,
      </if>
      <if test="ugcPublishMediaId != null" >
        ugc_publish_media_id,
      </if>
      <if test="avatarUrl != null" >
        avatar_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="authId != null" >
        #{authId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mediaId != null" >
        #{mediaId,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="followingCount != null" >
        #{followingCount,jdbcType=INTEGER},
      </if>
      <if test="verifiedContent != null" >
        #{verifiedContent,jdbcType=VARCHAR},
      </if>
      <if test="follow != null" >
        #{follow,jdbcType=BIT},
      </if>
      <if test="userVerified != null" >
        #{userVerified,jdbcType=BIT},
      </if>
      <if test="authType != null" >
        #{authType,jdbcType=INTEGER},
      </if>
      <if test="authInfo != null" >
        #{authInfo,jdbcType=VARCHAR},
      </if>
      <if test="videoLiveAuth != null" >
        #{videoLiveAuth,jdbcType=INTEGER},
      </if>
      <if test="banStatus != null" >
        #{banStatus,jdbcType=INTEGER},
      </if>
      <if test="followersCount != null" >
        #{followersCount,jdbcType=INTEGER},
      </if>
      <if test="shareUrl != null" >
        #{shareUrl,jdbcType=VARCHAR},
      </if>
      <if test="ugcPublishMediaId != null" >
        #{ugcPublishMediaId,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update author
    <set >
      <if test="record.authId != null" >
        auth_id = #{record.authId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.mediaId != null" >
        media_id = #{record.mediaId,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.followingCount != null" >
        following_count = #{record.followingCount,jdbcType=INTEGER},
      </if>
      <if test="record.verifiedContent != null" >
        verified_content = #{record.verifiedContent,jdbcType=VARCHAR},
      </if>
      <if test="record.follow != null" >
        follow = #{record.follow,jdbcType=BIT},
      </if>
      <if test="record.userVerified != null" >
        user_verified = #{record.userVerified,jdbcType=BIT},
      </if>
      <if test="record.authType != null" >
        auth_type = #{record.authType,jdbcType=INTEGER},
      </if>
      <if test="record.authInfo != null" >
        auth_info = #{record.authInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.videoLiveAuth != null" >
        video_live_auth = #{record.videoLiveAuth,jdbcType=INTEGER},
      </if>
      <if test="record.banStatus != null" >
        ban_status = #{record.banStatus,jdbcType=INTEGER},
      </if>
      <if test="record.followersCount != null" >
        followers_count = #{record.followersCount,jdbcType=INTEGER},
      </if>
      <if test="record.shareUrl != null" >
        share_url = #{record.shareUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.ugcPublishMediaId != null" >
        ugc_publish_media_id = #{record.ugcPublishMediaId,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarUrl != null" >
        avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update author
    set auth_id = #{record.authId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      media_id = #{record.mediaId,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      following_count = #{record.followingCount,jdbcType=INTEGER},
      verified_content = #{record.verifiedContent,jdbcType=VARCHAR},
      follow = #{record.follow,jdbcType=BIT},
      user_verified = #{record.userVerified,jdbcType=BIT},
      auth_type = #{record.authType,jdbcType=INTEGER},
      auth_info = #{record.authInfo,jdbcType=VARCHAR},
      video_live_auth = #{record.videoLiveAuth,jdbcType=INTEGER},
      ban_status = #{record.banStatus,jdbcType=INTEGER},
      followers_count = #{record.followersCount,jdbcType=INTEGER},
      share_url = #{record.shareUrl,jdbcType=VARCHAR},
      ugc_publish_media_id = #{record.ugcPublishMediaId,jdbcType=VARCHAR},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.teenyda.model.Author" >
    update author
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mediaId != null" >
        media_id = #{mediaId,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="followingCount != null" >
        following_count = #{followingCount,jdbcType=INTEGER},
      </if>
      <if test="verifiedContent != null" >
        verified_content = #{verifiedContent,jdbcType=VARCHAR},
      </if>
      <if test="follow != null" >
        follow = #{follow,jdbcType=BIT},
      </if>
      <if test="userVerified != null" >
        user_verified = #{userVerified,jdbcType=BIT},
      </if>
      <if test="authType != null" >
        auth_type = #{authType,jdbcType=INTEGER},
      </if>
      <if test="authInfo != null" >
        auth_info = #{authInfo,jdbcType=VARCHAR},
      </if>
      <if test="videoLiveAuth != null" >
        video_live_auth = #{videoLiveAuth,jdbcType=INTEGER},
      </if>
      <if test="banStatus != null" >
        ban_status = #{banStatus,jdbcType=INTEGER},
      </if>
      <if test="followersCount != null" >
        followers_count = #{followersCount,jdbcType=INTEGER},
      </if>
      <if test="shareUrl != null" >
        share_url = #{shareUrl,jdbcType=VARCHAR},
      </if>
      <if test="ugcPublishMediaId != null" >
        ugc_publish_media_id = #{ugcPublishMediaId,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where auth_id = #{authId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.teenyda.model.Author" >
    update author
    set name = #{name,jdbcType=VARCHAR},
      media_id = #{mediaId,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      following_count = #{followingCount,jdbcType=INTEGER},
      verified_content = #{verifiedContent,jdbcType=VARCHAR},
      follow = #{follow,jdbcType=BIT},
      user_verified = #{userVerified,jdbcType=BIT},
      auth_type = #{authType,jdbcType=INTEGER},
      auth_info = #{authInfo,jdbcType=VARCHAR},
      video_live_auth = #{videoLiveAuth,jdbcType=INTEGER},
      ban_status = #{banStatus,jdbcType=INTEGER},
      followers_count = #{followersCount,jdbcType=INTEGER},
      share_url = #{shareUrl,jdbcType=VARCHAR},
      ugc_publish_media_id = #{ugcPublishMediaId,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR}
    where auth_id = #{authId,jdbcType=VARCHAR}
  </update>
</mapper>